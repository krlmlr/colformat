% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multi.R
\name{colonnade}
\alias{colonnade}
\alias{squeeze}
\title{Format multiple vectors in a tabular display}
\usage{
colonnade(x, has_row_id = TRUE, width = NULL, ...)

squeeze(x, width = NULL, ...)
}
\arguments{
\item{x}{A list of vectors to format}

\item{has_row_id}{Include a column indicating row IDs? Pass \code{"*"} to mark
the row ID column with a star.}

\item{width}{Default width of the entire output, optional}

\item{...}{Ignored}
}
\description{
The vectors are formatted to fit horizontally into a user-supplied number of
characters per row.

The \code{squeeze()} function is called by \code{\link[=format]{format()}}  and \code{\link[=print]{print()}} and usually
doesn't need to be called manually.
It returns an object suitable for printing and formatting at a fixed width
with additional information about omitted columns.
}
\details{
In a first pass, for each pillar it is decided in which tier it is shown,
if at all, and how much horizontal space it may use (either its minumum
or its maximum width). More than one tier may be created if
\code{width > getOption("width")}, in this case each tier is at most
\code{getOption("width")} characters wide.
Remaining space is then distributed proportionally to pillars that do not
use their desired width.

For computing the pillar widths in a single tier, two cases are distinguished:
\enumerate{
\item When taking the minimum width for each pillar (plus one inter-pillar
space), at least one pillar does not fit.
In this case, the minimum width is assigned to all pillars that do fit,
the non-fitting pillars are stripped.
\item All pillars fit with their minimum width. In this case, starting at
the leftmost pillar, the maximum width is allocated to the pillars
until all available space is used.
}

The remaining space is distributed from left to right.
Each column gains space proportional to the fraction of missing and
remaining space,
rounded down.
Any space remaining after rounding is distributed from left to right,
one space per column.
}
